// generated with ast extension for cup
// version 0.8
// 29/11/2018 4:58:38


package rs.ac.bg.etf.pp1.ast;

public interface Visitor { 

    public void visit(Unmatched Unmatched);
    public void visit(EnumDecl EnumDecl);
    public void visit(Mulop Mulop);
    public void visit(MethodDecl MethodDecl);
    public void visit(Matched Matched);
    public void visit(Relop Relop);
    public void visit(TermList TermList);
    public void visit(Assignop Assignop);
    public void visit(ConditionList ConditionList);
    public void visit(CondTermList CondTermList);
    public void visit(Var Var);
    public void visit(Unmatched_For Unmatched_For);
    public void visit(StatementList StatementList);
    public void visit(Addop Addop);
    public void visit(ClassPart ClassPart);
    public void visit(ConstPart ConstPart);
    public void visit(Factor Factor);
    public void visit(CondTerm CondTerm);
    public void visit(VarList VarList);
    public void visit(ConstList ConstList);
    public void visit(DeclList DeclList);
    public void visit(Matched_For Matched_For);
    public void visit(Designator Designator);
    public void visit(Term Term);
    public void visit(Condition Condition);
    public void visit(For For);
    public void visit(ActParsList ActParsList);
    public void visit(EnumList EnumList);
    public void visit(Form Form);
    public void visit(ExprList ExprList);
    public void visit(DesignatorPart DesignatorPart);
    public void visit(Expr Expr);
    public void visit(ActPars ActPars);
    public void visit(DesignatorList DesignatorList);
    public void visit(DesignatorStatement DesignatorStatement);
    public void visit(FormParamList FormParamList);
    public void visit(Decl Decl);
    public void visit(Statement Statement);
    public void visit(VarDecl VarDecl);
    public void visit(Type Type);
    public void visit(ClassDecl ClassDecl);
    public void visit(ConstDecl ConstDecl);
    public void visit(CondFact CondFact);
    public void visit(MethodDeclList MethodDeclList);
    public void visit(Program Program);
    public void visit(Enums Enums);
    public void visit(Consts Consts);
    public void visit(FormPars FormPars);
    public void visit(MethVarDecl MethVarDecl);
    public void visit(MulopMod MulopMod);
    public void visit(MulopDiv MulopDiv);
    public void visit(MulopMul MulopMul);
    public void visit(AddopMinus AddopMinus);
    public void visit(AddopPlus AddopPlus);
    public void visit(RelopLessEq RelopLessEq);
    public void visit(RelopLess RelopLess);
    public void visit(RelopMoreEq RelopMoreEq);
    public void visit(RelopMore RelopMore);
    public void visit(RelopDif RelopDif);
    public void visit(RelopEq RelopEq);
    public void visit(AssignopEq AssignopEq);
    public void visit(DesignatorListID DesignatorListID);
    public void visit(DesignatorListExpr DesignatorListExpr);
    public void visit(DesignatorListDot DesignatorListDot);
    public void visit(Designators Designators);
    public void visit(FactorExpr FactorExpr);
    public void visit(FactorNewExpr FactorNewExpr);
    public void visit(FactorNewNoExpr FactorNewNoExpr);
    public void visit(FactorBool FactorBool);
    public void visit(FactorChar FactorChar);
    public void visit(FactorNum FactorNum);
    public void visit(FactorActPars FactorActPars);
    public void visit(FactorNoActPars FactorNoActPars);
    public void visit(FactorDesignator FactorDesignator);
    public void visit(TermListNoMulop TermListNoMulop);
    public void visit(TermListMulop TermListMulop);
    public void visit(Terms Terms);
    public void visit(ExprTermNoAddop ExprTermNoAddop);
    public void visit(ExprListAddop ExprListAddop);
    public void visit(ExprMinus ExprMinus);
    public void visit(ExprNoMinus ExprNoMinus);
    public void visit(ContFactRelop ContFactRelop);
    public void visit(ContFactNoRelop ContFactNoRelop);
    public void visit(CondTermListNoAnd CondTermListNoAnd);
    public void visit(CondTermListAnd CondTermListAnd);
    public void visit(ConditionTerm ConditionTerm);
    public void visit(ConditionListNoOr ConditionListNoOr);
    public void visit(ConditionListOr ConditionListOr);
    public void visit(Conditions Conditions);
    public void visit(ActParsListNoComma ActParsListNoComma);
    public void visit(ActParsListComma ActParsListComma);
    public void visit(ActualParameters ActualParameters);
    public void visit(DesignatorPart5 DesignatorPart5);
    public void visit(DesignatorPart4 DesignatorPart4);
    public void visit(DesignatorPart3 DesignatorPart3);
    public void visit(DesignatorPart2 DesignatorPart2);
    public void visit(DesignatorPart1 DesignatorPart1);
    public void visit(DesigStatement DesigStatement);
    public void visit(For123 For123);
    public void visit(For23 For23);
    public void visit(For13 For13);
    public void visit(For12 For12);
    public void visit(For3 For3);
    public void visit(For2 For2);
    public void visit(For1 For1);
    public void visit(ForEmpty ForEmpty);
    public void visit(MatchedForSeparation MatchedForSeparation);
    public void visit(UnmatchedForSeparation UnmatchedForSeparation);
    public void visit(MatchedStatement MatchedStatement);
    public void visit(MatchedPrintNumber MatchedPrintNumber);
    public void visit(MatchedPrint MatchedPrint);
    public void visit(MatchedRead MatchedRead);
    public void visit(MatchedReturnExpr MatchedReturnExpr);
    public void visit(MatchedReturnNoExpr MatchedReturnNoExpr);
    public void visit(MatchedContinue MatchedContinue);
    public void visit(MatchedBreak MatchedBreak);
    public void visit(MatchedFor MatchedFor);
    public void visit(MatchedIfElse MatchedIfElse);
    public void visit(MatchedDesignator MatchedDesignator);
    public void visit(UnmatchedFor UnmatchedFor);
    public void visit(UnmatchedIfElse UnmatchedIfElse);
    public void visit(UnmatchedIfNoElse UnmatchedIfNoElse);
    public void visit(StatementUnatched StatementUnatched);
    public void visit(StatementMatched StatementMatched);
    public void visit(NoStatements NoStatements);
    public void visit(StatementLists StatementLists);
    public void visit(Types Types);
    public void visit(FormBrackets FormBrackets);
    public void visit(FormNoBrackets FormNoBrackets);
    public void visit(FormParametersListSingle FormParametersListSingle);
    public void visit(FormParametersList FormParametersList);
    public void visit(NoFormParsList NoFormParsList);
    public void visit(FormParameters FormParameters);
    public void visit(NoMethodVarDecl NoMethodVarDecl);
    public void visit(MethodVarDecl MethodVarDecl);
    public void visit(MethodDeclarationVoid MethodDeclarationVoid);
    public void visit(MethodDeclarationType MethodDeclarationType);
    public void visit(NoMethodDeclaration NoMethodDeclaration);
    public void visit(MethodDeclarationList MethodDeclarationList);
    public void visit(ClassPartDerived1 ClassPartDerived1);
    public void visit(ClassPartMethod ClassPartMethod);
    public void visit(ClassDeclaration ClassDeclaration);
    public void visit(VarBrackets VarBrackets);
    public void visit(VarNoBrackets VarNoBrackets);
    public void visit(VarListNoComma VarListNoComma);
    public void visit(VarListComma VarListComma);
    public void visit(VarDeclaration VarDeclaration);
    public void visit(EnumNum EnumNum);
    public void visit(EnumNoNum EnumNoNum);
    public void visit(EnumNoComma EnumNoComma);
    public void visit(EnumListComma EnumListComma);
    public void visit(EnumDeclaration EnumDeclaration);
    public void visit(ConstBool ConstBool);
    public void visit(ConstChar ConstChar);
    public void visit(ConstNumber ConstNumber);
    public void visit(ConstantsPart ConstantsPart);
    public void visit(ConstantsListNoComma ConstantsListNoComma);
    public void visit(ConstantsListComma ConstantsListComma);
    public void visit(ConstantsDecl ConstantsDecl);
    public void visit(Declarations4 Declarations4);
    public void visit(Declarations3 Declarations3);
    public void visit(Declarations2 Declarations2);
    public void visit(Declarations1 Declarations1);
    public void visit(NoDeclList NoDeclList);
    public void visit(Declarations Declarations);
    public void visit(ProgramID ProgramID);

}
